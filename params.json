{"body":"# asiduhfauisdhfuiashdfuiahisdufhasd\r\n\r\nTap into [The Echo Nest's](http://the.echonest.com/) Musical Brain for the best music search, information, recommendations and remix tools on the web.\r\n\r\nPyechonest is an open source Python library for the Echo Nest API.  With Pyechonest you have Python access to the entire set of API methods including:\r\n\r\n  * **artist** - search for artists by name, description, or attribute, and get back detailed information about any artist including audio, similar artists, blogs, familiarity, hotttnesss, news, reviews, urls and video.\r\n  * **song** - search songs by artist, title, description, or attribute (tempo, duration, etc) and get detailed information back about each song, such as hotttnesss, audio_summary, or tracks.\r\n  * **track** - upload a track to the Echo Nest and receive summary information about the track including key, duration, mode, tempo, time signature along with detailed track info including timbre, pitch, rhythm and loudness information.\r\n\r\n## Install\r\nThere are a few different ways you can install pyechonest:\r\n\r\n* Use setuptools: \"easy_install -U pyechonest\"\r\n* Download the zipfile from the [downloads](https://github.com/echonest/pyechonest/archives/master) page and install it. \r\n* Checkout the source: \"git clone git://github.com/echonest/pyechonest.git\" and install it yourself.\r\n   \r\n## Getting Started\r\n * Install Pyechonest\r\n * **Get an API key** - to use the Echo Nest API you need an Echo Nest API key.  You can get one for free at [developer.echonest.com](http://developer.echonest.com).\r\n * **Set the API** key - you can do this one of two ways:\r\n  * set an environment variable named ECHO_NEST_API_KEY to your API key\r\n  * Include this snippet of code at the beginning of your python scripts:\r\n    from pyechonest import config\r\n    config.ECHO_NEST_API_KEY=\"YOUR API KEY\"\r\n * Check out the [docs](http://echonest.github.com/pyechonest/) and examples below.\r\n\r\n## Examples\r\n*All examples assume you have already setup your api key!*\r\n\r\nFind artists that are similar to 'Bikini Kill':\r\n\r\n    from pyechonest import artist\r\n    bk = artist.Artist('bikini kill')\r\n    print \"Artists similar to: %s:\" % (bk.name,)\r\n    for similar_artist in bk.similar:\r\n        print \"\\t%s\" % (similar_artist.name,)\r\n\r\nSearch for artist:\r\n\r\n    from pyechonest import artist\r\n    weezer_results = artist.search(name='weezer')\r\n    weezer = weezer_results[0]\r\n    weezer_blogs = weezer.blogs\r\n    print 'Blogs about weezer:', [blog.get('url') for blog in weezer_blogs]\r\n\r\nGet an artist by name:\r\n\r\n    from pyechonest import artist\r\n    a = artist.Artist('lady gaga')\r\n    print a.id\r\n\r\nGet an artist by Musicbrainz ID:\r\n\r\n    from pyechonest import artist\r\n    a = artist.Artist('musicbrainz:artist:a74b1b7f-71a5-4011-9441-d0b5e4122711')\r\n    print a.name\r\n\r\nGet the top hottt artists:\r\n\r\n    from pyechonest import artist\r\n    for hottt_artist in artist.top_hottt():\r\n        print hottt_artist.name, hottt_artist.hotttnesss\r\n\r\nSearch for songs:\r\n\r\n    from pyechonest import song\r\n    rkp_results = song.search(artist='radiohead', title='karma police')\r\n    karma_police = rkp_results[0]\r\n    print karma_police.artist_location\r\n    print 'tempo:',karma_police.audio_summary['tempo'],'duration:',karma_police.audio_summary['duration']\r\n\r\nGet a song's audio_url and analysis_url:\r\n\r\n    from pyechonest import song\r\n    ss_results = song.search(artist='the national', title='slow show', buckets=['id:7digital', 'tracks'], limit=True)\r\n    slow_show = ss_results[0]\r\n    ss_tracks = slow_show.get_tracks('7digital')\r\n    print ss_tracks[0].get('preview_url')\r\n\r\n![alt text](http://i.imgur.com/WWLYo.gif \"Frustrated cat can't believe this is the 12th time he's clicked on an auto-linked README.md URL\")\r\n","name":"Anemo","google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"Anemoi - Digital Image Processing Software for Segmentation of Climatological Graphic Records"}